model_name: "demonstration model"
model_version: 0.1
scenario_name: "test scenario"
zonal_data: "../data/parcels_2020forolaf_na.csv" 
neighbors: "../data/neighbors.npy"
geo_id: "parcelid"
draws: 30
filter_Undevelopable: "devstatus!='Undevelopable'"
year: 2020
BuildingSQFT_per_Unit: 1254

land_uses:
  SFDU_growth:
    name: "single-family dwelling units (added)"
    market: "housing"
    store_fld: "SFDU_growth"
    # filter is passed to DataFrame.query(); value is passed to DataFrame.eval()
    filter_fn: "(SFDU_growth + SFDU - SFDU_decline) == 0" # can only allocate to parcels that don"t have anything
    value_fn: "Acres10p*-1.01274622223964+Acres1to10*-0.5655951836486073+Acreshalfto1acres*-0.8494424349643916+Acreslt4000sqft*-1.8639729615958327+NatWalkInd*1.0007457702323934+bg_average_age_n*-1.0014520451208109+cnt_intersections_n*0.2083044291588777+dist2sewerpipe_n*0.3740037388637179+emp_entropy*1.105109291313524+hu_density*-0.6394731492992539+inPSGA*-0.8476490692502506+inSGA*0.9990954310382336+job_tran45*-0.5880043646184189+jph_balance*-7.933592750026002+mix_entropy*8.35905538666809+neighbors_hhvshu*0.9702722987128192+neighbors_hudensity_n*-1.2340672864747442+neighbors_jobdensity_n*-0.6993676366152082+neighbors_jobentropy*-0.0396960748154342+neighbors_per_blt*0.4445643950697934+neighbors_per_empret_p*-4.894546837771033+neighbors_per_sf*-0.8198121974543303+wrkperjob*8.851719274745054" # term calibrated to match 2014-2019 trends at block group
    total: $SFDU_GROWTH #2038
    capacity_fn: 1
  SFDU_decline:
    name: "single-family dwelling units (removed)"
    market: "housing"
    store_fld: "SFDU_decline"
    # filter is passed to DataFrame.query(); value is passed to DataFrame.eval()
    filter_fn: "(SFDU - SFDU_decline) > 0" # can only de-allocate from parcels that had anything
    value_fn: "Acreslt4000sqft*1.128593914573133+Acresquartertohalfacres*-0.3623752638522615+NatWalkInd*-2.594174906332187+dist2sewerpipe_n*-1.9883534007594568+hu_density*-6.068909615807969+inSGA*-0.4995458146806855+inWaterDistrictP*-1.5970491678615517+jph_balance*-10.791661852636352+mix_entropy*1.9794948558628445+neighbors_hudensity_n*-0.7708245442729591+neighbors_per_blt*-2.2388047042567667+neighbors_per_empret_p*1.044483090800613+neighbors_per_sf*0.4335330292886162+wrkperjob*-2.0850188560192318" # reverse scoring for declines
    total: $SFDU_decline #1550
    capacity_fn: 1
  MFDU_growth:
    name: "multi-family dwelling units (added)"
    market: "housing"
    store_fld: "MFDU_growth"
    # filter is passed to DataFrame.query(); value is passed to DataFrame.eval()
    filter_fn: "(MFDU_growth+MF2_4DU+`MF5+DU`-MFDU_decline) < abs(sqft_p*Cap_HS/43560)" # allocate to parcels that didn"t have anything in the base (but can keep allocating)
    value_fn: "Acres10p*1.3366329794160798+Acres1to10*0.749804961518833+Acreshalfto1acres*0.1197346563925449+Acreslt4000sqft*-6.028750433709488+NatWalkInd*1.479543395831445+bg_average_age_n*0.7828703646336436+cnt_intersections_n*3.672944132601222+dist2sewerpipe_n*4.664972625817176+emp_entropy*-0.9079897740404508+hu_density*-0.5404043536904287+inPSGA*2.854993592499764+inSGA*-1.8602407547678703+job_tran45*-1.581800528939438+jph_balance*7.498633112382493+mix_entropy*-5.666699274110225+neighbors_hhvshu*-1.2950560012510153+neighbors_hudensity_n*0.2299176935889766+neighbors_jobdensity_n*1.247470235277357+neighbors_jobentropy*-0.0093815537437349+neighbors_per_blt*1.5490898853013215+neighbors_per_empret_p*4.0424080706810805+neighbors_per_sf*2.279870224462763+wrkperjob*-2.812606282752173" # term calibrated to match 2014-2019 trends at block group
    total: 550
    capacity_fn: "abs(sqft_p*Cap_HS/43560)-(MFDU_growth+MF2_4DU+`MF5+DU`-MFDU_decline)"
  MFDU_decline:
    name: "multi-family dwelling units (removed)"
    market: "housing"
    store_fld: "MFDU_decline"
    # filter is passed to DataFrame.query(); value is passed to DataFrame.eval()
    filter_fn: "(MF2_4DU+`MF5+DU` - MFDU_decline + MFDU_growth) > 0" # can only de-allocate from parcels that had anything
    value_fn: "Acreslt4000sqft*1.128593914573133+Acresquartertohalfacres*-0.3623752638522615+NatWalkInd*-2.594174906332187+dist2sewerpipe_n*-1.9883534007594568+hu_density*-6.068909615807969+inSGA*-0.4995458146806855+inWaterDistrictP*-1.5970491678615517+jph_balance*-10.791661852636352+mix_entropy*1.9794948558628445+neighbors_hudensity_n*-0.7708245442729591+neighbors_per_blt*-2.2388047042567667+neighbors_per_empret_p*1.044483090800613+neighbors_per_sf*0.4335330292886162+wrkperjob*-2.0850188560192318" # term calibrated to match 2014-2019 trends at block group
    total: 837
    capacity_fn: "MF2_4DU+`MF5+DU`- MFDU_decline + MFDU_growth"
  OTHR_growth:
    name: "other dwelling units (added)"
    market: "housing"
    store_fld: "OTHR_growth"
    # filter is passed to DataFrame.query(); value is passed to DataFrame.eval()
    filter_fn: "(MHDU + OTHR_growth - OTHR_decline) == 0" # can only allocate to parcels that don"t have anything
    value_fn: "Acres10p*1.3366329794160798+Acres1to10*0.749804961518833+Acreshalfto1acres*0.1197346563925449+Acreslt4000sqft*-6.028750433709488+NatWalkInd*1.479543395831445+bg_average_age_n*0.7828703646336436+cnt_intersections_n*3.672944132601222+dist2sewerpipe_n*4.664972625817176+emp_entropy*-0.9079897740404508+hu_density*-0.5404043536904287+inPSGA*2.854993592499764+inSGA*-1.8602407547678703+job_tran45*-1.581800528939438+jph_balance*7.498633112382493+mix_entropy*-5.666699274110225+neighbors_hhvshu*-1.2950560012510153+neighbors_hudensity_n*0.2299176935889766+neighbors_jobdensity_n*1.247470235277357+neighbors_jobentropy*-0.0093815537437349+neighbors_per_blt*1.5490898853013215+neighbors_per_empret_p*4.0424080706810805+neighbors_per_sf*2.279870224462763+wrkperjob*-2.812606282752173" # term calibrated to match 2014-2019 trends at block groupn
    total: 1175
    capacity_fn: "abs(sqft_p*Cap_HS/43560)"
  OTHR_decline:
    name: "other dwelling units (removed)"
    market: "housing"
    store_fld: "OTHR_decline"
    # filter is passed to DataFrame.query(); value is passed to DataFrame.eval()
    filter_fn: "(MHDU + OTHR_growth - OTHR_decline) > 0" # can only de-allocate from parcels that have something
    value_fn: "Acreslt4000sqft*1.128593914573133+Acresquartertohalfacres*-0.3623752638522615+NatWalkInd*-2.594174906332187+dist2sewerpipe_n*-1.9883534007594568+hu_density*-6.068909615807969+inSGA*-0.4995458146806855+inWaterDistrictP*-1.5970491678615517+jph_balance*-10.791661852636352+mix_entropy*1.9794948558628445+neighbors_hudensity_n*-0.7708245442729591+neighbors_per_blt*-2.2388047042567667+neighbors_per_empret_p*1.044483090800613+neighbors_per_sf*0.4335330292886162+wrkperjob*-2.0850188560192318" # term calibrated to match 2014-2019 trends at block group
    total: 222
    capacity_fn: MHDU + OTHR_growth - OTHR_decline
  INDOFC_growth:
    name: "Industrial/Office workspaces (added)"
    market: "business"
    store_fld: "INDOFC_growth"
    filter_fn: "(TOT_DU == 0) & (emptot_p+INDOFC_growth-INDOFC_decline+RETSVC_growth-RETSVC_decline+OTHGOV_growth-OTHGOV_decline) < abs(sqft_p*Cap_Job/43560)"
    value_fn: "hu_density*(-6.303e+01)+wrk_auto45*(-5.019e+01)+job_auto45*(3.115e+01)+cnt_intersections_n*(1.714e+01)+avg_sqft_p_n*(-3.463e+03)"
    total: 450 # test - to be replaced with more realistic number
    capacity_fn: "abs(sqft_p*Cap_Job/43560)-(emptot_p+INDOFC_alloc+RETSVC_alloc+OTHGOV_alloc)"
  INDOFC_decline:
    name: "Industrial/Office workspaces (removed)"
    market: "business"
    store_fld: "INDOFC_decline"
    filter_fn: "(empind_p+empofc_p+INDOFC_growth-INDOFC_decline)>0"
    value_fn: "-1*(hu_density*(-6.303e+01)+wrk_auto45*(-5.019e+01)+job_auto45*(3.115e+01)+cnt_intersections_n*(1.714e+01)+avg_sqft_p_n*(-3.463e+03))"
    total: 0
    capacity_fn: 1
  RETSVC_growth:
    name: "Retail/Service workspaces (added)"
    market: "business"
    store_fld: "RETSVC_growth"
    filter_fn: "(TOT_DU == 0) & (emptot_p+INDOFC_growth-INDOFC_decline+RETSVC_growth-RETSVC_decline+OTHGOV_growth-OTHGOV_decline) < abs(sqft_p*Cap_Job/43560)"
    value_fn:  "hu_density*(-3.856e+01)+wrk_auto45*(-9.393e+01)+job_auto45*(8.039e+01)+avg_sqft_p_n*(-6.911e+03)"
    total: 450 # test - to be replaced with more realistic number
    capacity_fn: "abs(sqft_p*Cap_Job/43560)-(emptot_p+INDOFC_growth-INDOFC_decline+RETSVC_growth-RETSVC_decline+OTHGOV_growth-OTHGOV_decline)"
  RETSVC_decline:
    name: "Retail & Service workspaces (removed)"
    market: "business"
    store_fld: "RETSVC_decline"
    filter_fn: "(empedu_p+empfoo_p+empmed_p+empret_p+empsvc_p+RETSVC_growth-RETSVC_decline) > 0"
    value_fn:  "-1*(hu_density*(-3.856e+01)+wrk_auto45*(-9.393e+01)+job_auto45*(8.039e+01)+avg_sqft_p_n*(-6.911e+03))"
    total: 0
    capacity_fn: 1
  OTHGOV_growth:
    name: "Government & Other workspaces (added)"
    market: "business"
    store_fld: "OTHGOV_alloc"
    filter_fn: "(TOT_DU == 0) & (emptot_p+INDOFC_alloc+RETSVC_alloc+OTHGOV_alloc) < abs(sqft_p*Cap_Job/43560)"
    value_fn:  "wrk_auto45*(-6.098e+01)+job_auto45*(3.864e+01)+cnt_intersections_n*(-1.686e+00)+avg_sqft_p_n*(-2.464e+03)"
    total: 450 # test - to be replaced with more realistic number
    capacity_fn: "abs(sqft_p*Cap_Job/43560)-(emptot_p+INDOFC_growth-INDOFC_decline+RETSVC_growth-RETSVC_decline+OTHGOV_growth-OTHGOV_decline)"
  OTHGOV_decline:
    name: "Government & Other workspaces (removed)"
    market: "business"
    store_fld: "OTHGOV_alloc"
    filter_fn: "(empoth_p+OTHGOV_growth-OTHGOV_decline)>0"
    value_fn:  "-1*(wrk_auto45*(-6.098e+01)+job_auto45*(3.864e+01)+cnt_intersections_n*(-1.686e+00)+avg_sqft_p_n*(-2.464e+03))"
    total: 0
    capacity_fn: 1 

# these lines are passed to DataFrame.eval() after allocation
update_block: [
  "SFDU_alloc = -SFDU_decline + SFDU_growth",
  "MFDU_alloc = -MFDU_decline + MFDU_growth",
  "OTHR_alloc = -OTHR_decline + OTHR_growth",
  "SFDU_final = SFDU + SFDU_alloc",
  "MFDU_final = MF2_4DU+`MF5+DU` + MFDU_alloc",
  "MF2_4DU_final = MF2_4DU*(MF2_4DU+`MF5+DU`)/MFDU_final",
  "`MF5+DU_final` = `MF5+DU`*(MF2_4DU+`MF5+DU`)/MFDU_final",
  "MHDU_final = MHDU + OTHR_alloc",
  "TOT_DU_final = SFDU_final+ MFDU_final+MHDU_final",
  "JOBS_alloc = INDOFC_growth-INDOFC_decline+RETSVC_growth-RETSVC_decline+OTHGOV_growth-OTHGOV_decline",
  "JOBS_final = emptot_p + JOBS_alloc",
  "BuildingSQFT=BuildingSQFT+neighbors_bldsqft_per_unit*(SFDU_alloc+MFDU_alloc+OTHR_alloc+JOBS_alloc)"  


  
]